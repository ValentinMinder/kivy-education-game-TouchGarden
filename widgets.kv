# Background colored labels are in LabelB and LabelC, a subclass on-the-fly
<LabelC>:
    canvas.before:
        Color:
            rgb: 1, 1, 1 # your color here
        Rectangle:
            pos: self.pos
            size: self.size

#:import KIVY_DEFAULT_FONT settings.KIVY_DEFAULT_FONT
<Label>:
    font_name: KIVY_DEFAULT_FONT
    font_size: 20
    color: 0, 0, 0, 1
    halign: 'center'
    valign: 'middle'
    markup: True
    text_size: self.size

<Button>:
    valign: 'middle'
    halign: 'center'
    font_size: 30
    color: 1, 1, 1, 1
    border: 25, 25, 25, 25

<ButtonStar>:
    color: 0, 0, 0, 1
    valign: 'bottom'
    background_normal: "images/768px-Grey_Star.svg.png"
    background_down: "images/768px-Gold_Star.svg.png"

<ButtonCategory>:
    color: 0, 0, 0, 1
    valign: 'bottom'

<ImageWidget>:
    size_hint: None, None
    allow_stretch: True
    canvas.before:
        Color:
            rgba: 0, 0, 0, 1
        Rectangle:
            pos: root.pos
            size: root.size

<DragLabel>:
    # Define the properties for the DragLabel
    drag_rectangle: self.x, self.y, self.width, self.height
    drag_timeout: 10000000
    drag_distance: 0

<StaticImage>
    image: imag
    Image:
        id: imag
        on_touch_down: root.parent.parent.currentObj = self.parent

<ElementScatter>
    image: imag
    # to replace object at their correct original placement
    x_orig: 0
    y_orig: 0
    #to know wether positive or negative scenario should be activated
    positive: True
    # to know if should react to touch
    touch: False
    Image:
        id: imag
        size: 200, 200
        source: 'images/768px-Gold_Star.svg.png'
        on_touch_down: root.parent.parent.currentObj = self.parent